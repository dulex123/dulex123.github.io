<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Душан Јосиповић</title>
    <description>Experimental software engineering.</description>
    <link>http://sudo.engineer/</link>
    <atom:link href="http://sudo.engineer/feed.xml" rel="self" type="application/rss+xml" />
    
      <item>
        <title>LSTM backpropagation in cs231n</title>
        <description>&lt;p&gt;&lt;em&gt;This page will not try to explain what LSTM is or how it works. For that you can check colah’s blog and deeplearningbook, instead this will be a guide on how to perform a cell backprop for LSTM.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;strong&gt;Notice:&lt;/strong&gt; It’s recommended that you try to do the exercise on your own, only if you’ve tried your best should you proceed.&lt;/em&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;img src=&quot;http://imgh.us/dg1.svg&quot; alt=&quot;alt text&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 09 Nov 2016 00:00:00 +0100</pubDate>
        <link>http://sudo.engineer/posts/2016/11/09/LSTM-backpropagation-in-cs231n/</link>
        <guid isPermaLink="true">http://sudo.engineer/posts/2016/11/09/LSTM-backpropagation-in-cs231n/</guid>
      </item>
    
      <item>
        <title>Starting with deep learning frameworks</title>
        <description>&lt;p&gt;&lt;strong&gt;&lt;em&gt;Notice: This 3min post can potentially save you ~14hrs of wasted time,
depending on your level of knowledge.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;em&gt;Dear Diary,&lt;br /&gt;
I have lost around &lt;strong&gt;16 working hours&lt;/strong&gt; on trying to set up caffe deep
learning framework on Ubuntu 16.04. I am currently on the 9th level of
dependency hell, and there is no light at the end of the tunnel. There is
no tunnel either. Because you have held broken packages.&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;doing-it-yourself&quot;&gt;Doing it yourself&lt;/h2&gt;
&lt;p&gt;Hands-on experience tops every other learning method. Therefore it makes
sense to start working with higher-level frameworks/libraries as soon as
you feel you’ve conquered nuts and bolts of
&lt;a href=&quot;/posts/2016/09/24/machine-learning-immersion/&quot;&gt;machine learning foundations&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;But before you dive in and type all the research papers away, process of
installation can get awfully bad.&lt;/p&gt;

&lt;p&gt;It can get n-wasted-hours bad. Or even worse, you somehow manage to
scrape it together, but you feel bad because you’ve just entered fifteen
semi-familiar commands and partially bloated your system since five
didn’t work.&lt;/p&gt;

&lt;h2 id=&quot;the-time-consuming-way&quot;&gt;The time-consuming way&lt;/h2&gt;
&lt;p&gt;Install everything by reading official docs. Sometimes building from
source. lol&lt;/p&gt;

&lt;p&gt;Questions I forgot to ask myself while I did this:&lt;br /&gt;
 - Do you really want all that extra software on your host machine?&lt;br /&gt;
 - What if you wanted to do same experiment/project somewhere else?&lt;br /&gt;
   Installing everything again?&lt;br /&gt;
 - If so what about host-specific configs needed on other machines?&lt;/p&gt;

&lt;h2 id=&quot;docking-the-install&quot;&gt;Docking the install&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://www.docker.com/&quot;&gt;Docker&lt;/a&gt; is this fantastic tool that efficiently allows you to isolate
your dev environments from the host machine(s).&lt;/p&gt;

&lt;p&gt;I have started using it just a few days ago to install &lt;strong&gt;all major DL frameworks at
once&lt;/strong&gt;, so I am no expert but I already see many benefits.&lt;/p&gt;

&lt;p&gt;Docker terminology:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Dockerfile&lt;/strong&gt;&lt;br /&gt;
  A text document that has all commands needed to build &lt;em&gt;the image&lt;/em&gt;. It’s
  the recipe on how to create the image and what dependencies to install.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Image&lt;/strong&gt;&lt;br /&gt;
  Docker &lt;em&gt;image&lt;/em&gt; is built by dockerfile. It’s an immutable template that has
  all dependencies and can be instantiated as &lt;em&gt;container&lt;/em&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Container&lt;/strong&gt;&lt;br /&gt;
  The container is a lightweight, self-contained environment that is instantiated
  from an image and can be accessed via terminal/GUI. You can easily setup shared
  folder between host and container, open ports for ipython notebooks or just use
  terminal directly.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Having clear idea of the concepts above, following through this
&lt;a href=&quot;https://github.com/saiprashanths/dl-docker&quot;&gt;awesome README&lt;/a&gt; you’ll get Tensorflow-Caffe-Theano-Keras-Lasagne-Torch-enabled
machine up and running in no time.&lt;/p&gt;

&lt;p&gt;You may also find useful this &lt;a href=&quot;https://github.com/wsargent/docker-cheat-sheet/blob/master/README.md&quot;&gt;beautiful cheatsheet&lt;/a&gt; that has many
useful docker commands which can help your docker-fu.&lt;/p&gt;

</description>
        <pubDate>Sun, 09 Oct 2016 00:00:00 +0200</pubDate>
        <link>http://sudo.engineer/posts/2016/10/09/docked-deep-learning/</link>
        <guid isPermaLink="true">http://sudo.engineer/posts/2016/10/09/docked-deep-learning/</guid>
      </item>
    
      <item>
        <title>Machine learning immersion</title>
        <description>&lt;p&gt;&lt;em&gt;This page will be updated as I absorb more stuff.&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;path-of-machine-learning&quot;&gt;Path of Machine Learning&lt;/h2&gt;
&lt;p&gt;So you have finally decided to immerse yourself in the world of machine learning. Congrats! Here is my list of material I consider very useful.&lt;/p&gt;

&lt;p&gt;Staying up to date is very important for anything Computer Science related and is also true in the fast-evolving field of deep learning. So here are some of the latest educational materials.&lt;/p&gt;

&lt;p&gt;-&lt;/p&gt;

&lt;h2 id=&quot;environment&quot;&gt;Environment&lt;/h2&gt;
&lt;p&gt;The easiest way to pick up the speed is to surround yourself with people that are in the field and are sharing information through social networks. If you don’t know where to start, have a look at my &lt;a href=&quot;https://twitter.com/josipovicd/following&quot;&gt;twitter list&lt;/a&gt; and go to their sources. If most of it doesn’t make sense in the beginning that’s fine. Keep calm and learn as much as you can.&lt;/p&gt;

&lt;h2 id=&quot;online-courses&quot;&gt;Online courses&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://www.coursera.org/learn/machine-learning&quot;&gt;Coursera, Machine Learning&lt;/a&gt;&lt;br /&gt;
Taught by fantastic Andrew Ng, this course provides a very nice introduction to the field of machine learning. You build all models yourself in Matlab/Octave. Especially useful is the course wiki that you are introduced to in Week 1. Highly recommended.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://academictorrents.com/details/46c5af9e2075d9af06f280b55b65cf9b44eb9fe7&quot;&gt;Stanford, Convolutional Neural Networks for Visual Recognition&lt;/a&gt;&lt;br /&gt;
Building upon what you learned previously, this course from January 2016 really gets you in the high gear where you delve deep into the nuts and bolts of CNNs, implementing networks every step of the way. There are also &lt;a href=&quot;http://cs231n.github.io/&quot;&gt;awesome notes and assignments&lt;/a&gt; on the GitHub page of the course. Probably the best online course I have ever taken.&lt;/p&gt;

&lt;h2 id=&quot;the-book&quot;&gt;The book&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;http://www.deeplearningbook.org/&quot;&gt;Deep learning book&lt;/a&gt;. It’s a fire hose, try not to drown your thirst for knowledge.&lt;/p&gt;

&lt;p&gt;-&lt;/p&gt;

&lt;h2 id=&quot;something-i-am-about-to-dive-in&quot;&gt;Something I am about to dive in&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;http://upwork.com&quot;&gt;UpWork&lt;/a&gt;
&lt;a href=&quot;https://gym.openai.com/&quot;&gt;OpenAI Gym&lt;/a&gt;
&lt;a href=&quot;https://www.kaggle.com/&quot;&gt;Kaggle competitions&lt;/a&gt;&lt;br /&gt;
Awesome places to further explore hot topics, meet people, sharpen your skills and make some money too!&lt;/p&gt;
</description>
        <pubDate>Sat, 24 Sep 2016 00:00:00 +0200</pubDate>
        <link>http://sudo.engineer/posts/2016/09/24/machine-learning-immersion/</link>
        <guid isPermaLink="true">http://sudo.engineer/posts/2016/09/24/machine-learning-immersion/</guid>
      </item>
    
      <item>
        <title>CompetitiveFlow</title>
        <description>&lt;h2 id=&quot;insane-habit-of-copy-pasting-tests&quot;&gt;Insane habit of copy-pasting tests&lt;/h2&gt;

&lt;p&gt;If you have done any competitive programming on codeforces you may have noticed that in those intense moments when the clock is ticking away and some new insight into problem strikes you, you start copy-pasting test problems into terminal. And if you do it for a few times it becomes an insane habit that can ruin your train of thought that may lead to a solution.&lt;/p&gt;

&lt;p&gt;So after a few hours of tweaking I have made this pair of scripts that will allow you to test your solutions more easily. Check it out on &lt;a href=&quot;https://github.com/dulex123/competitive-flow&quot;&gt;Github&lt;/a&gt;&lt;/p&gt;

&lt;iframe width=&quot;640&quot; height=&quot;400&quot; src=&quot;https://www.youtube.com/embed/vFjqoGfHRBk&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;h2 id=&quot;update&quot;&gt;Update:&lt;/h2&gt;

&lt;p&gt;After using competitive flow for a few rounds, I’ve got some new ideas that would be worth developing for even faster coding.&lt;/p&gt;

&lt;p&gt;Features:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Program connected to browser via extension with native support - this will enable the program to gather problem info without copying data&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Terminal-gui (&lt;a href=&quot;https://en.wikipedia.org/wiki/Ncurses&quot;&gt;Ncurses lib&lt;/a&gt;) where a,b,c,d,e,f selects problem mode and 1,2,3,4.. runs particular test on it&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Run all tests / Submit command&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Init - initialize folder with separate files for each problem filled with boilerplate code&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Wed, 08 Jun 2016 00:00:00 +0200</pubDate>
        <link>http://sudo.engineer/schemes/2016/06/08/Scripts-for-competitive-flow/</link>
        <guid isPermaLink="true">http://sudo.engineer/schemes/2016/06/08/Scripts-for-competitive-flow/</guid>
      </item>
    
  </channel>
</rss>
